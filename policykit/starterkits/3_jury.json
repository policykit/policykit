{
  "name": "Jury",
  "description": "A random jury is called upon to vote whenever a constitution action is proposed.",
  "disabled": true,
  "platform_policies": [
    {
      "name": "All Platform Actions Pass",
      "description": "All platform actions pass automatically",
      "filter": "return True",
      "initialize": "pass",
      "check": "return PASSED",
      "notify": "pass",
      "success": "pass",
      "fail": "pass"
    }
  ],
  "constitution_policies": [
    {
      "name": "Jury: Constitution Actions Passed by Jury",
      "description": "Constitutions actions must be passed by random jury of 3 members",
      "filter": "return True",
      "initialize": "usernames = [u.username for u in ${PLATFORM}.get_users()]\njury = random.sample(usernames, k=3)\nproposal.data.set('jury', jury)",
      "check": "jury = proposal.data.get('jury')\njury_users = ${PLATFORM}.get_users().filter(username__in=jury)\nyes_votes = proposal.get_yes_votes(users=jury_users)\nif len(yes_votes) >= 2:\n    return PASSED\nelif proposal.get_time_elapsed() > datetime.timedelta(days=2):\n    return FAILED",
      "notify": "jury = proposal.data.get('jury')\njury_users = ${PLATFORM}.get_users().filter(username__in=jury)\n${PLATFORM}.initiate_vote(users=jury_users, text='Please deliberate amongst yourselves before voting')",
      "success": "pass",
      "fail": "pass"
    }
  ],
  "roles": [
    {
      "name": "Base User",
      "description": "",
      "is_base_role": true,
      "user_group": "all",
      "platform_permission_sets": [
        "view",
        "propose"
      ],
      "constitution_permission_sets": [
        "view",
        "propose"
      ],
      "permissions": [
        "Can add boolean vote",
        "Can change boolean vote",
        "Can delete boolean vote",
        "Can view boolean vote",
        "Can add number vote",
        "Can change number vote",
        "Can delete number vote",
        "Can view number vote"
      ]
    }
  ]
}
